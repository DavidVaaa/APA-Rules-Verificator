import java_cup.runtime.*;
import java.lang.Math;
import java.util.*;
import java.io.*;


parser code {:
    
   

    public void report_error(String message, Object info) {
   
        StringBuffer m = new StringBuffer("Error");
   
        if (info instanceof java_cup.runtime.Symbol) {
             java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
            if (s.left >= 0) {                
                m.append(" in line "+(s.left+1));   
                if (s.right >= 0)                    
                    m.append(", column "+(s.right+1));
            }
        }
   
        m.append(" : "+message);
   
        System.err.println(m);
    }
   
    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }
:};
   

   
/* ------------Declaration of Terminals and Non Terminals Section----------- */
   
terminal SYMBOL, YEAR, TITLE, PUBLISHER, DOT;
terminal String STRING;

non terminal Citation, Author, Date, BookTitle, Editorial;

/* Producciones */

Citation ::= Author Date BookTitle Editorial DOT;

Author ::= SYMBOL;

Date ::= "(" YEAR ")";

BookTitle ::= TITLE;

Editorial ::= SYMBOL;

/* Reglas de precedencia (si es necesario) */

precedence left TOK_AND, TOK_OR, TOK_NOT;
   